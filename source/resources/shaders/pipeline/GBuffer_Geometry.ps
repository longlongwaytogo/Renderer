// GBuffer_GeometryShader.ps
#version 330 core
// MRT 绘制时，会将out 对应输出到不同的 COLOR_ATTACHMENT 中
layout (location = 0) out vec3 gPosition;   // GL_COLOR_ATTACHMENT0
layout (location = 1) out vec3 gNormal;     // GL_COLOR_ATTACHMENT1
layout (location = 2) out vec4 gAlbedoSpec; // GL_COLOR_ATTACHMENT2

in vec2 TexCoords;
in vec3 FragPos;
in vec3 Normal;

uniform sampler2D texture_diffuse1;  // 漫反射贴图
uniform sampler2D texture_specular1; // 高光贴图

void main()
{    
    // store the fragment position vector in the first gbuffer texture
    gPosition = FragPos;
    // also store the per-fragment normals into the gbuffer
    gNormal = normalize(Normal);
    // and the diffuse per-fragment color
    gAlbedoSpec.rgb = texture(texture_diffuse1, TexCoords).rgb;
    // store specular intensity in gAlbedoSpec's alpha component
    gAlbedoSpec.a = texture(texture_specular1, TexCoords).r;
}