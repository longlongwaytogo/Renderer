//6.hdr.ps
#version 330 core
in vec2 TexCoords;
out vec4 FragColor;

uniform sampler2D hdrBuffer;
uniform bool hdr;
uniform float exposure;

void main()
{
	const float gamma = 2.2;
	// 获取离屏渲染的结果
	vec3 hdrColor = texture(hdrBuffer, TexCoords).rgb;
	if (hdr)
	{
		// Reinhard色调映射
		vec3 mappedColor = hdrColor / (hdrColor + vec3(1.0));
		// exposure
		// vec3 mappedColor =  vec3(1.0) - exp(-hdrColor * exposure);
		// Gamma 校正
		mappedColor = pow(mappedColor, vec3(1.0 / gamma));

		FragColor = vec4(mappedColor, 1.0);
	}
	else
	{
		vec3 result = pow(hdrColor, vec3(1.0 / gamma));
		FragColor = vec4(result, 1.0);
	}
}
