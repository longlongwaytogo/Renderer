#version 330 core
out vec4 FragColor;

in vec3 Position;
in vec3 Normal;
in vec2 TexCoords;

uniform vec3 cameraPos;
uniform sampler2D texture_diffuse1;
uniform sampler2D texture_reflection1;
uniform sampler2D texture_reflection2;
uniform samplerCube skybox;

void main()
{    
	vec4 diffuse_color = texture(texture_diffuse1,TexCoords);
	// Reflection
	vec3 I = normalize(Position - cameraPos);
	vec3 R = reflect(I,normalize(Normal));
	float reflect_intisity = texture(texture_reflection1,TexCoords).r;
	
	vec4 reflect_color;
	if(reflect_intisity > 0.1) 
		reflect_color  = texture(skybox, R) * reflect_intisity;
		
    FragColor =  diffuse_color + reflect_color ;
}